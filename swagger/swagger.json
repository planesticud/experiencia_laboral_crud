{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Url http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/cargo/": {
            "get": {
                "tags": [
                    "cargo"
                ],
                "summary": "get Cargo",
                "operationId": "CargoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.Cargo",
                        "schema": {
                            "$ref": "#/definitions/Cargo"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "cargo"
                ],
                "summary": "create Cargo",
                "operationId": "CargoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Cargo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Cargo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "models.Cargo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cargo/{id}": {
            "get": {
                "tags": [
                    "cargo"
                ],
                "summary": "get Cargo by id",
                "operationId": "CargoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.Cargo",
                        "schema": {
                            "$ref": "#/definitions/Cargo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "cargo"
                ],
                "summary": "update the Cargo",
                "operationId": "CargoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Cargo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Cargo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.Cargo",
                        "schema": {
                            "$ref": "#/definitions/Cargo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cargo"
                ],
                "summary": "delete the Cargo",
                "operationId": "CargoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/dato_adicional_experiencia_laboral/": {
            "get": {
                "tags": [
                    "dato_adicional_experiencia_laboral"
                ],
                "summary": "get DatoAdicionalExperienciaLaboral",
                "operationId": "DatoAdicionalExperienciaLaboralController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.DatoAdicionalExperienciaLaboral",
                        "schema": {
                            "$ref": "#/definitions/DatoAdicionalExperienciaLaboral"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "dato_adicional_experiencia_laboral"
                ],
                "summary": "create DatoAdicionalExperienciaLaboral",
                "operationId": "DatoAdicionalExperienciaLaboralController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DatoAdicionalExperienciaLaboral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatoAdicionalExperienciaLaboral"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "models.DatoAdicionalExperienciaLaboral"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dato_adicional_experiencia_laboral/{id}": {
            "get": {
                "tags": [
                    "dato_adicional_experiencia_laboral"
                ],
                "summary": "get DatoAdicionalExperienciaLaboral by id",
                "operationId": "DatoAdicionalExperienciaLaboralController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.DatoAdicionalExperienciaLaboral",
                        "schema": {
                            "$ref": "#/definitions/DatoAdicionalExperienciaLaboral"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "dato_adicional_experiencia_laboral"
                ],
                "summary": "update the DatoAdicionalExperienciaLaboral",
                "operationId": "DatoAdicionalExperienciaLaboralController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DatoAdicionalExperienciaLaboral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatoAdicionalExperienciaLaboral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.DatoAdicionalExperienciaLaboral",
                        "schema": {
                            "$ref": "#/definitions/DatoAdicionalExperienciaLaboral"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "dato_adicional_experiencia_laboral"
                ],
                "summary": "delete the DatoAdicionalExperienciaLaboral",
                "operationId": "DatoAdicionalExperienciaLaboralController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/experiencia_laboral/": {
            "get": {
                "tags": [
                    "experiencia_laboral"
                ],
                "summary": "get ExperienciaLaboral",
                "operationId": "ExperienciaLaboralController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.ExperienciaLaboral",
                        "schema": {
                            "$ref": "#/definitions/ExperienciaLaboral"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "experiencia_laboral"
                ],
                "summary": "create ExperienciaLaboral",
                "operationId": "ExperienciaLaboralController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ExperienciaLaboral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExperienciaLaboral"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "models.ExperienciaLaboral"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/experiencia_laboral/{id}": {
            "get": {
                "tags": [
                    "experiencia_laboral"
                ],
                "summary": "get ExperienciaLaboral by id",
                "operationId": "ExperienciaLaboralController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.ExperienciaLaboral",
                        "schema": {
                            "$ref": "#/definitions/ExperienciaLaboral"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "experiencia_laboral"
                ],
                "summary": "update the ExperienciaLaboral",
                "operationId": "ExperienciaLaboralController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ExperienciaLaboral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExperienciaLaboral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.ExperienciaLaboral",
                        "schema": {
                            "$ref": "#/definitions/ExperienciaLaboral"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "experiencia_laboral"
                ],
                "summary": "delete the ExperienciaLaboral",
                "operationId": "ExperienciaLaboralController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/relacion_cargos/": {
            "get": {
                "tags": [
                    "relacion_cargos"
                ],
                "summary": "get RelacionCargos",
                "operationId": "RelacionCargosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.RelacionCargos",
                        "schema": {
                            "$ref": "#/definitions/RelacionCargos"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "relacion_cargos"
                ],
                "summary": "create RelacionCargos",
                "operationId": "RelacionCargosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RelacionCargos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RelacionCargos"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "models.RelacionCargos"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/relacion_cargos/{id}": {
            "get": {
                "tags": [
                    "relacion_cargos"
                ],
                "summary": "get RelacionCargos by id",
                "operationId": "RelacionCargosController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.RelacionCargos",
                        "schema": {
                            "$ref": "#/definitions/RelacionCargos"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "relacion_cargos"
                ],
                "summary": "update the RelacionCargos",
                "operationId": "RelacionCargosController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RelacionCargos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RelacionCargos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.RelacionCargos",
                        "schema": {
                            "$ref": "#/definitions/RelacionCargos"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "relacion_cargos"
                ],
                "summary": "delete the RelacionCargos",
                "operationId": "RelacionCargosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/soporte_experiencia_laboral/": {
            "get": {
                "tags": [
                    "soporte_experiencia_laboral"
                ],
                "summary": "get SoporteExperienciaLaboral",
                "operationId": "SoporteExperienciaLaboralController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.SoporteExperienciaLaboral",
                        "schema": {
                            "$ref": "#/definitions/SoporteExperienciaLaboral"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "soporte_experiencia_laboral"
                ],
                "summary": "create SoporteExperienciaLaboral",
                "operationId": "SoporteExperienciaLaboralController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SoporteExperienciaLaboral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SoporteExperienciaLaboral"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "models.SoporteExperienciaLaboral"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/soporte_experiencia_laboral/{id}": {
            "get": {
                "tags": [
                    "soporte_experiencia_laboral"
                ],
                "summary": "get SoporteExperienciaLaboral by id",
                "operationId": "SoporteExperienciaLaboralController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.SoporteExperienciaLaboral",
                        "schema": {
                            "$ref": "#/definitions/SoporteExperienciaLaboral"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "soporte_experiencia_laboral"
                ],
                "summary": "update the SoporteExperienciaLaboral",
                "operationId": "SoporteExperienciaLaboralController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SoporteExperienciaLaboral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SoporteExperienciaLaboral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.SoporteExperienciaLaboral",
                        "schema": {
                            "$ref": "#/definitions/SoporteExperienciaLaboral"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "soporte_experiencia_laboral"
                ],
                "summary": "delete the SoporteExperienciaLaboral",
                "operationId": "SoporteExperienciaLaboralController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_dedicacion/": {
            "get": {
                "tags": [
                    "tipo_dedicacion"
                ],
                "summary": "get TipoDedicacion",
                "operationId": "TipoDedicacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.TipoDedicacion",
                        "schema": {
                            "$ref": "#/definitions/TipoDedicacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_dedicacion"
                ],
                "summary": "create TipoDedicacion",
                "operationId": "TipoDedicacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoDedicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoDedicacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "models.TipoDedicacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_dedicacion/{id}": {
            "get": {
                "tags": [
                    "tipo_dedicacion"
                ],
                "summary": "get TipoDedicacion by id",
                "operationId": "TipoDedicacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.TipoDedicacion",
                        "schema": {
                            "$ref": "#/definitions/TipoDedicacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_dedicacion"
                ],
                "summary": "update the TipoDedicacion",
                "operationId": "TipoDedicacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoDedicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoDedicacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.TipoDedicacion",
                        "schema": {
                            "$ref": "#/definitions/TipoDedicacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_dedicacion"
                ],
                "summary": "delete the TipoDedicacion",
                "operationId": "TipoDedicacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_vinculacion/": {
            "get": {
                "tags": [
                    "tipo_vinculacion"
                ],
                "summary": "get TipoVinculacion",
                "operationId": "TipoVinculacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.TipoVinculacion",
                        "schema": {
                            "$ref": "#/definitions/TipoVinculacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_vinculacion"
                ],
                "summary": "create TipoVinculacion",
                "operationId": "TipoVinculacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoVinculacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoVinculacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "models.TipoVinculacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_vinculacion/{id}": {
            "get": {
                "tags": [
                    "tipo_vinculacion"
                ],
                "summary": "get TipoVinculacion by id",
                "operationId": "TipoVinculacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.TipoVinculacion",
                        "schema": {
                            "$ref": "#/definitions/TipoVinculacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_vinculacion"
                ],
                "summary": "update the TipoVinculacion",
                "operationId": "TipoVinculacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoVinculacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoVinculacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "models.TipoVinculacion",
                        "schema": {
                            "$ref": "#/definitions/TipoVinculacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_vinculacion"
                ],
                "summary": "delete the TipoVinculacion",
                "operationId": "TipoVinculacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "Cargo": {
            "title": "Cargo",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "DatoAdicionalExperienciaLaboral": {
            "title": "DatoAdicionalExperienciaLaboral",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "ExperienciaLaboral": {
                    "$ref": "#/definitions/ExperienciaLaboral"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoDatoAdicional": {
                    "type": "integer",
                    "format": "int64"
                },
                "Valor": {
                    "type": "string"
                }
            }
        },
        "ExperienciaLaboral": {
            "title": "ExperienciaLaboral",
            "type": "object",
            "properties": {
                "Actividades": {
                    "type": "string"
                },
                "Cargo": {
                    "$ref": "#/definitions/Cargo"
                },
                "FechaFinalizacion": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "FechaInicio": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Organizacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Persona": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoDedicacion": {
                    "$ref": "#/definitions/TipoDedicacion"
                },
                "TipoVinculacion": {
                    "$ref": "#/definitions/TipoVinculacion"
                }
            }
        },
        "RelacionCargos": {
            "title": "RelacionCargos",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Hijo": {
                    "$ref": "#/definitions/Cargo"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Padre": {
                    "$ref": "#/definitions/Cargo"
                }
            }
        },
        "SoporteExperienciaLaboral": {
            "title": "SoporteExperienciaLaboral",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Documento": {
                    "type": "integer",
                    "format": "int64"
                },
                "ExperienciaLaboral": {
                    "$ref": "#/definitions/ExperienciaLaboral"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TipoDedicacion": {
            "title": "TipoDedicacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "TipoVinculacion": {
            "title": "TipoVinculacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        }
    },
    "tags": [
        {
            "name": "tipo_dedicacion",
            "description": "TipoDedicacionController operations for TipoDedicacion\n"
        },
        {
            "name": "cargo",
            "description": "CargoController operations for Cargo\n"
        },
        {
            "name": "soporte_experiencia_laboral",
            "description": "SoporteExperienciaLaboralController operations for SoporteExperienciaLaboral\n"
        },
        {
            "name": "dato_adicional_experiencia_laboral",
            "description": "DatoAdicionalExperienciaLaboralController operations for DatoAdicionalExperienciaLaboral\n"
        },
        {
            "name": "tipo_vinculacion",
            "description": "TipoVinculacionController operations for TipoVinculacion\n"
        },
        {
            "name": "experiencia_laboral",
            "description": "ExperienciaLaboralController operations for ExperienciaLaboral\n"
        },
        {
            "name": "relacion_cargos",
            "description": "oprations for RelacionCargos\n"
        }
    ]
}